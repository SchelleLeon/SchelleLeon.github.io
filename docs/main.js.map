{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/private/dashboard/dashboard.component.html","webpack:///./src/app/private/dashboard/dashboard.component.scss","webpack:///./src/app/private/dashboard/dashboard.component.ts","webpack:///./src/app/private/details/details.component.html","webpack:///./src/app/private/details/details.component.scss","webpack:///./src/app/private/details/details.component.ts","webpack:///./src/app/private/private.component.html","webpack:///./src/app/private/private.component.scss","webpack:///./src/app/private/private.component.ts","webpack:///./src/app/private/private.guard.ts","webpack:///./src/app/private/private.routes.ts","webpack:///./src/app/private/visual/visual.component.html","webpack:///./src/app/private/visual/visual.component.scss","webpack:///./src/app/private/visual/visual.component.ts","webpack:///./src/app/public/public.component.html","webpack:///./src/app/public/public.component.scss","webpack:///./src/app/public/public.component.ts","webpack:///./src/app/public/public.guard.ts","webpack:///./src/app/trello-service/set-token/set-token.component.html","webpack:///./src/app/trello-service/set-token/set-token.component.scss","webpack:///./src/app/trello-service/set-token/set-token.component.ts","webpack:///./src/app/trello-service/trello-api/token-interceptor.ts","webpack:///./src/app/trello-service/trello-api/trello.service.ts","webpack:///./src/app/trello-service/trello-auth/trello-auth.service.ts","webpack:///./src/app/trello-service/trello-auth/trello-storage-key.ts","webpack:///./src/app/trello-service/trello-service.module.ts","webpack:///./src/app/trello-service/trello-service.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PrivateComponent} from './private/private.component';\nimport {PublicComponent} from './public/public.component';\nimport {PRIV_ROUTES} from './private/private.routes';\nimport {PrivateGuard} from './private/private.guard';\nimport {PublicGuard} from './public/public.guard';\n\n\nconst routes: Routes = [\n  {path: 'private', canActivate: [PrivateGuard], component: PrivateComponent, children: PRIV_ROUTES},\n  {path: '', canActivate: [PublicGuard], component: PublicComponent}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  // declarations: []\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'TrelloView';\n\n  /**\n   * public apiKey = '4c96a328e7ea9b34311ac6dade4d0b8d';\n   * private apiToken = '20b32bb9f9a12cb3d431232af241f628dbe5e661d340630928153984cc6b81ea';\n   * */\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {TrelloServiceModule} from './trello-service/trello-service.module';\n\nimport {AppComponent} from './app.component';\nimport {DashboardComponent} from './private/dashboard/dashboard.component';\nimport {DetailsComponent} from './private/details/details.component';\nimport {VisualComponent} from './private/visual/visual.component';\nimport {AppRoutingModule} from './/app-routing.module';\nimport {PrivateComponent} from './private/private.component';\nimport {PublicComponent} from './public/public.component';\nimport {PublicGuard} from './public/public.guard';\nimport {PrivateGuard} from './private/private.guard';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    DetailsComponent,\n    VisualComponent,\n    PrivateComponent,\n    PublicComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TrelloServiceModule\n  ],\n  providers: [PrivateGuard, PublicGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container color-dark\\\">\\n  <button (click)=\\\"logout()\\\">\\n    Logout again?\\n  </button>\\n  <div class=\\\"col\\\">\\n    <p>My active Boards on Trello</p>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <p>Add a new Board</p>\\n  </div>\\n</div>\\n<div class=\\\"container color-light\\\">\\n  <div class=\\\"col\\\">\\n    <ul class=\\\"board-list-container\\\">\\n      <li  *ngFor=\\\"let board of boards\\\" (click)=\\\"getListsByBoardId(board.id)\\\">\\n        {{ board.name }}\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <p class=\\\"sm\\\">  You can use this form to add a new Trello-Card to your selected Board.\\n                    Simply click on a Board of to Boardlist to show your current Cards.</p>\\n    <hr>\\n    <ul class=\\\"card-list-container\\\">\\n      <li  *ngFor=\\\"let list of lists\\\">\\n        <input type=\\\"radio\\\" id=\\\"{{list.id}}\\\" value=\\\"{{list.name}}\\\">\\n        <label for=\\\"{{list.id}}\\\"> &nbsp; {{list.name}} </label>\\n      </li>\\n    </ul>\\n\\n    <form>\\n      <hr>\\n      <p class=\\\"sm\\\">  Insert the name of your new card in the textbox below and click\\n                      on the green button to finally add your card to the selected board.</p>\\n\\n      <input type=\\\"text\\\" class=\\\"txt\\\" name=\\\"card\\\" placeholder=\\\"Name of your card..\\\">\\n      <input type=\\\"submit\\\" class=\\\"btn\\\" value=\\\"Add Card\\\">\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \".container {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 50% auto;\\n      grid-template-columns: 50% auto; }\\n\\n.col {\\n  padding: .4em 1.3em; }\\n\\n.color-dark {\\n  background: #2885C4; }\\n\\n.color-light {\\n  background: #57B3F1; }\\n\\ninput.txt {\\n  border: 0;\\n  padding: 1em;\\n  width: 80%;\\n  margin-bottom: 2em; }\\n\\ninput.btn {\\n  border: 0;\\n  display: block;\\n  padding: 1em 3em;\\n  background: #A5F883;\\n  color: #003A61;\\n  margin-bottom: 1em;\\n  cursor: pointer; }\\n\\n.board-list-container {\\n  list-style: none; }\\n\\n.board-list-container li {\\n  background: #3FA0E1;\\n  padding: .5em;\\n  margin-top: 10px;\\n  cursor: pointer; }\\n\\n.board-list-container li:hover {\\n  background: #78bcea; }\\n\\n.card-list-container {\\n  list-style: none; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TrelloAuthService } from '../../trello-service/trello-auth/trello-auth.service';\nimport { TrelloService } from '../../trello-service/trello-api/trello.service';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  bId: string;\n  private apiKey: string;\n  private apiToken: string;\n  /**private apiURL = 'https://api.trello.com/1/members/me/boards?key=' + this.apiKey + '&token=' + this.apiToken;*/\n\n  data: any = {};\n  boards: any;\n  cards: any;\n  lists: any;\n\n  constructor(private http: HttpClient, private trelloAuthService: TrelloAuthService, private trelloService: TrelloService) {}\n\n  getBoards() {\n    return this.http.get('https://api.trello.com/1/members/me/boards').subscribe(data => {\n      this.boards = data;\n    });\n  }\n\n  getCardsByBoardId(boardId: string) {\n    this.bId = boardId;\n    const getCardsUrl = 'https://api.trello.com/1/boards/' + this.bId + '/cards'\n    return this.http.get(getCardsUrl).subscribe(data => {\n      this.cards = data;\n    });\n  }\n\n  getListsByBoardId(boardId: string) {\n    this.bId = boardId;\n    const getListsUrl = 'https://api.trello.com/1/boards/' + this.bId + '/lists'\n    return this.http.get(getListsUrl).subscribe(data => {\n      this.lists = data;\n    });\n  }\n\n  ngOnInit() {\n    this.getBoards();\n  }\n\n  logout() {\n    this.trelloAuthService.logout();\n  }\n\n}\n","module.exports = \"<p>\\n  details works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {TrelloService} from '../../trello-service/trello-api/trello.service';\nimport {TrelloAuthService} from '../../trello-service/trello-auth/trello-auth.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent implements OnInit {\n\n  constructor(private http: HttpClient, private trelloAuthService: TrelloAuthService, private trelloService: TrelloService) {}\n\n  async ngOnInit() {\n\n  }\n\n  logout() {\n    this.trelloAuthService.logout();\n  }\n\n}\n","module.exports = \"<!-- Navigation bar of our root app component -->\\n\\n<nav>\\n  <a routerLink=\\\"\\\">Dashboard</a>\\n  <a routerLink=\\\"details\\\">Details</a>\\n  <a routerLink=\\\"visual\\\">Visual</a>\\n</nav>\\n\\n<!--\\nUsually we're nesting the different components into our root like this:\\n\\n<app-dashboard></app-dashboard>\\n<app-details></app-details>\\n<app-visual></app-visual>\\n\\nBut for now we don't need this anymore because we'er using the routing module\\nto switch between our different components with the navigation bar on our site.\\n-->\\n\\n<!-- Router outlet shows you the component you navigated through 'routerLink' -->\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-private',\n  templateUrl: './private.component.html',\n  styleUrls: ['./private.component.scss']\n})\nexport class PrivateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {TrelloAuthService} from '../trello-service/trello-auth/trello-auth.service';\n\n\n@Injectable()\nexport class PrivateGuard implements CanActivate {\n\n\n  constructor(private router: Router, private authService: TrelloAuthService) {\n  }\n\n  canActivate(): boolean {\n    const authToken: string = this.authService.getToken();\n    if (authToken) {\n      return true;\n    } else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n\n\n}\n","import {Routes} from '@angular/router';\nimport {VisualComponent} from './visual/visual.component';\nimport {DetailsComponent} from './details/details.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\n\n\nexport const PRIV_ROUTES: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  },\n  {\n    path: 'details',\n    component: DetailsComponent\n  },\n  {\n    path: 'visual',\n    component: VisualComponent\n  }\n]\n","module.exports = \"<p>\\n  visual works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {TrelloService} from '../../trello-service/trello-api/trello.service';\nimport {HttpClient} from '@angular/common/http';\nimport {TrelloAuthService} from '../../trello-service/trello-auth/trello-auth.service';\n\n@Component({\n  selector: 'app-visual',\n  templateUrl: './visual.component.html',\n  styleUrls: ['./visual.component.scss']\n})\nexport class VisualComponent implements OnInit {\n\n  constructor(private http: HttpClient, private trelloAuthService: TrelloAuthService, private trelloService: TrelloService) {}\n\n  async ngOnInit() {\n  }\n\n  logout() {\n    this.trelloAuthService.logout();\n  }\n\n}\n","module.exports = \"<p>\\n  public works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {TrelloAuthService} from '../trello-service/trello-auth/trello-auth.service';\n\n@Component({\n  selector: 'app-public',\n  templateUrl: './public.component.html',\n  styleUrls: ['./public.component.scss']\n})\nexport class PublicComponent implements OnInit {\n\n  constructor(private authService: TrelloAuthService) { }\n\n  ngOnInit() {\n    this.login();\n  }\n\n  login() {\n    this.authService.login();\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {TrelloAuthService} from '../trello-service/trello-auth/trello-auth.service';\n\n@Injectable()\nexport class PublicGuard implements CanActivate {\n\n\n  constructor(private router: Router, private authService: TrelloAuthService){\n\n  }\n\n  canActivate(): boolean {\n    if (this.authService.getToken()) {\n      this.router.navigate(['private']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n","module.exports = \"<p>\\n  set-token works!\\n</p>\\n\"","module.exports = \"\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs/index';\nimport {TrelloAuthService} from '../trello-auth/trello-auth.service';\nimport {Router, ActivatedRoute} from '@angular/router';\n\n/**\n * Probs to JM097, HdM-Stuttgart\n * Great work, ty! */\n\n@Component({\n  selector: 'app-set-token',\n  templateUrl: './set-token.component.html',\n  styleUrls: ['./set-token.component.scss']\n})\nexport class SetTokenComponent implements OnInit, OnDestroy {\n\n  private token: string;\n  private fragSubscription: Subscription;\n\n  constructor(private router: Router, private authService: TrelloAuthService, private aRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.fragSubscription = this.aRoute.fragment.subscribe(\n      fragment => {\n        if (fragment) {\n          this.token = fragment.slice(6);\n          this.authService.setToken(this.token);\n          console.log(this.authService.getToken())\n          this.router.navigate(['/']);\n        } else {\n          this.router.navigate(['/']);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.fragSubscription.unsubscribe();\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpRequest} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { TrelloAuthService } from '../trello-auth/trello-auth.service';\nimport { _throw } from 'rxjs/observable/throw';\n\n/**\n * This interceptor adds your api key and the users trello auth token to every http request.\n * Watch out: when you make http calls to other origin then trello you'll leak your users private\n * token. Then you'll need to add a url check in the intercept method!\n * */\n@Injectable()\nexport class TokenInterceptor {\n\n  constructor(public trelloAuthService: TrelloAuthService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.trelloAuthService.getToken();\n    if (!token) {\n      return _throw('Couldn\\'t connect to Trello API since no token was provided!');\n    }\n\n    request = request.clone({\n      setParams: {\n        token: this.trelloAuthService.getToken(),\n        key: this.trelloAuthService.apiKey,\n      }\n    });\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Trello } from '../../../trello';\nimport User = Trello.User;\n\n@Injectable()\nexport class TrelloService {\n\n  constructor(private httpClient: HttpClient) {}\n\n  async getMe(): Promise<User> {\n    return this.httpClient.get<User>('https://api.trello.com/1/members/me').toPromise();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TRELLO_STORAGE_KEY } from './trello-storage-key';\n\n\n@Injectable()\nexport class TrelloAuthService {\n\n  public token: string;\n  public apiKey = '9dc8960d3015fee5599a539e20a2d91d';\n\n  constructor(private  router: Router) {\n    this.token = localStorage.getItem(TRELLO_STORAGE_KEY);\n  }\n\n  getToken(): string | undefined {\n    return localStorage.getItem(TRELLO_STORAGE_KEY);\n  }\n\n  setToken(token: string): void {\n    return localStorage.setItem(TRELLO_STORAGE_KEY, token);\n  }\n\n  deleteToken() {\n    localStorage.removeItem(TRELLO_STORAGE_KEY);\n  }\n\n  login() {\n    window.location.href = this.assembleUrl();\n  }\n\n\n  assembleUrl(): string {\n    const returnUrl = encodeURI (  window.location.href + 'set-token');\n    console.log(this.apiKey);\n    return 'https://trello.com/1/authorize?response_type=token&key=' + this.apiKey +\n      '&return_url=' + returnUrl +\n      '&callback_method=fragment&scope=read&expiration=never&name=Angular-TrelloView-App';\n  }\n\n  /**\n   * Logout, guards are responsible to redirect\n   */\n\n  async logout(): Promise<void> {\n    localStorage.removeItem(TRELLO_STORAGE_KEY);\n    await this.router.navigate(['/']);\n  }\n\n}\n\n\n\n","/**\n * The key under which the Trello API token is stored in LocalStorage. */\nexport const TRELLO_STORAGE_KEY = 'token';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {SetTokenComponent} from './set-token/set-token.component';\nimport {TokenInterceptor} from './trello-api/token-interceptor';\nimport {TrelloAuthService} from './trello-auth/trello-auth.service';\nimport {TrelloService} from './trello-api/trello.service';\nimport {AppRoutingModule} from './trello-service.routing';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  declarations: [SetTokenComponent],\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true}, TrelloAuthService, TrelloService]\n})\nexport class TrelloServiceModule { }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SetTokenComponent} from './set-token/set-token.component';\n\n\nconst routes: Routes = [\n  {path: 'set-token', component: SetTokenComponent}\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes)],\n  exports: [ RouterModule ]\n  })\nexport class AppRoutingModule { }\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}